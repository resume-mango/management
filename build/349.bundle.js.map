{"version":3,"file":"349.bundle.js","mappings":"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","sources":["webpack://management/./src/components/svgs/link.tsx","webpack://management/./src/pages/payments/allPayments.tsx","webpack://management/./src/pages/payments/singlePayments.tsx","webpack://management/./src/pages/payments/index.tsx","webpack://management/./src/queries/paymentQueries.ts"],"sourcesContent":["import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst LinkIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        fill=\"none\"\n      >\n        <path\n          fill={color || '#898989'}\n          d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default LinkIcon\n","import dayjs from 'dayjs'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport CrossIcon from '../../components/svgs/cross'\nimport DashPageHeader from '../../components/ui/dashPageHeader'\nimport Search from '../../components/ui/search'\nimport Select from '../../components/ui/select'\nimport {\n  getPayments,\n  IGetPaymentQueryParams,\n} from '../../queries/paymentQueries'\nimport { Badge } from '../../styled/badge'\nimport { Button } from '../../styled/button'\nimport { LoadingDots, LoadingWrapper, Spinner } from '../../styled/loader'\nimport { TableList } from '../../styled/table'\n\nconst searchOptions = [\n  { label: 'User ID', name: 'user_id' },\n  { label: 'Payment ID', name: 'invoice_id' },\n  { label: 'Customer ID', name: 'customer' },\n  { label: 'Subscription ID', name: 'subscription' },\n]\n\nconst AllPayments = () => {\n  const [page, setPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchByValue, setSearchByValue] = useState(searchOptions[0].name)\n  const [query, setQuery] = useState<string | undefined>(undefined)\n  const [cacheRef, setCacheRef] = useState<'all_list' | 'search_list'>(\n    'all_list'\n  )\n  const [nextPageId, setNextPageId] = useState('')\n  const [startAfter, setStartAfter] = useState('')\n\n  const navigate = useNavigate()\n\n  const createQuery = (feild: string) => {\n    switch (feild) {\n      case 'user_id':\n        return `user_id:\"${searchValue}\"`\n      case 'customer':\n        return `customer:\"${searchValue}\"`\n      case 'subscription':\n        return `subscription:\"${searchValue}\"`\n      case 'invoice_id':\n        return `invoice_id:\"${searchValue}\"`\n      default:\n        return undefined\n    }\n  }\n\n  const params: IGetPaymentQueryParams = { limit: 25 }\n  if (query) {\n    params.q = query\n  }\n\n  if (startAfter) {\n    params.start_after = startAfter\n  }\n\n  if (nextPageId) {\n    params.next_page = nextPageId\n  }\n\n  const { data, isLoading, isError } = getPayments(page, cacheRef, params)\n\n  useEffect(() => {\n    if (!data) return\n    if (data.start_after) {\n      setCacheRef('all_list')\n      setStartAfter(data.start_after)\n    }\n    if (data.next_page) {\n      setCacheRef('search_list')\n      setNextPageId(data.next_page)\n    }\n    return\n  }, [data])\n\n  useEffect(() => {\n    setSearchValue('')\n  }, [searchByValue])\n\n  const handleReset = () => {\n    setSearchByValue(searchOptions[0].name)\n    setSearchValue('')\n    setQuery(undefined)\n  }\n\n  const handlePage = (type: 'next' | 'prev') => {\n    type === 'next' && setPage((page) => page + 1)\n    type === 'prev' && setPage((page) => page - 1)\n  }\n\n  const handleSearch = () => {\n    if (searchValue.length === 0) setQuery('')\n    else setQuery(createQuery(searchByValue))\n  }\n\n  const Empty = (\n    <div className=\"align-center\" style={{ height: '30vh' }}>\n      <h3>No Payments Found!</h3>\n    </div>\n  )\n\n  const Loading = (\n    <LoadingWrapper>\n      <Spinner type=\"primary\" size=\"2rem\" />\n      <LoadingDots color=\"#f08438\">Loading</LoadingDots>\n    </LoadingWrapper>\n  )\n\n  return (\n    <Fragment>\n      <DashPageHeader title=\"Payments\" border></DashPageHeader>\n      <Wrapper>\n        {isError ? (\n          <div className=\"align-center\" style={{ height: '30vh' }}>\n            <h3>Failed to load Payments!</h3>\n          </div>\n        ) : isLoading && page === 0 ? (\n          Loading\n        ) : (\n          <Fragment>\n            <ActionsWrapper>\n              <div className=\"action-item\">\n                <Search\n                  placeholder={\n                    searchByValue === 'customer'\n                      ? 'eg: cus_Li9Ymb5d9o2wPI'\n                      : searchByValue === 'subscription'\n                      ? 'eg: sub_1L0qZEIh2DuAq8sftOrbrsAm'\n                      : searchByValue === 'invoice_id'\n                      ? 'eg: in_1L1FTHIh2DuAq8sfNZZiFmJM'\n                      : searchByValue === 'user_id'\n                      ? 'eg: 61c78fea0355ed7123fe0700'\n                      : 'Search'\n                  }\n                  value={searchValue}\n                  setValue={setSearchValue}\n                  handleSubmit={() => handleSearch()}\n                />\n              </div>\n              <div className=\"action-item\">\n                <Select\n                  name=\"Search By\"\n                  options={searchOptions}\n                  value={searchByValue}\n                  setValue={setSearchByValue}\n                />\n              </div>\n              <div className=\"action-item\">\n                <Button\n                  btnType=\"ghost\"\n                  size=\"lg\"\n                  width=\"100%\"\n                  onClick={() => handleReset()}\n                >\n                  <CrossIcon size=\"0.7rem\" />\n                  <span style={{ marginLeft: '0.5rem' }}>Reset</span>\n                </Button>\n              </div>\n            </ActionsWrapper>\n            <Fragment>\n              <TableList>\n                <thead>\n                  <tr>\n                    <th style={{ width: 'auto' }}>ID</th>\n                    <th style={{ width: '15%' }}>Plan</th>\n                    <th style={{ width: '10%' }}>Amount</th>\n                    <th style={{ width: '15%' }}>Status</th>\n                    <th style={{ width: '18%' }}>Card</th>\n                    <th style={{ width: '18%' }}>Date</th>\n                  </tr>\n                </thead>\n                {data && data.items && data.items.length > 0 && (\n                  <tbody>\n                    {data.items.map((item: Record<string, any>, i: number) => (\n                      <tr\n                        key={i}\n                        onClick={() => navigate(`/payments/${item.id}`)}\n                      >\n                        <td>{item.id || '-'}</td>\n                        <td className=\"capitalize\">{item.plan_name || '-'}</td>\n                        <td>\n                          ${item.amount || '0.00'}&nbsp;\n                          {item.currency && item.currency}\n                        </td>\n                        <td className=\"capitalize\">\n                          {item.refunded ? (\n                            <RefundWrapper>\n                              <Badge type=\"ghost\" size=\"sm\">\n                                Refunded\n                              </Badge>\n                            </RefundWrapper>\n                          ) : item.amount_refunded > 0 ? (\n                            <RefundWrapper>\n                              <Badge type=\"ghost\" size=\"sm\">\n                                Partial Refund\n                              </Badge>\n                            </RefundWrapper>\n                          ) : (\n                            <Badge\n                              size=\"sm\"\n                              type={\n                                item.status === 'succeeded'\n                                  ? 'success'\n                                  : item.status === 'cancelled'\n                                  ? 'ghost'\n                                  : item.status === 'failed'\n                                  ? 'danger'\n                                  : 'info'\n                              }\n                            >\n                              {item.status}\n                            </Badge>\n                          )}\n                        </td>\n                        <td>\n                          {(item.method.brand && item.method.last4 && (\n                            <Card>\n                              {item.method.brand && item.method.brand}\n\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              {item.method.last4}\n                            </Card>\n                          )) ||\n                            'card'}\n                        </td>\n                        <td>\n                          {dayjs(item.date).format('DD MMM YYYY, hh:mm a')}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                )}\n              </TableList>\n\n              {isLoading && page !== 0 && Loading}\n              {data && data.items.length === 0 && Empty}\n              {data && data.items.length > 0 && (\n                <PaginationWrapper>\n                  <Button\n                    btnType=\"secondary\"\n                    disabled={page === 0}\n                    onClick={() => handlePage('prev')}\n                  >\n                    Previous\n                  </Button>\n                  <Button\n                    btnType=\"secondary\"\n                    disabled={!data.has_more}\n                    onClick={() => handlePage('next')}\n                  >\n                    Next\n                  </Button>\n                </PaginationWrapper>\n              )}\n            </Fragment>\n          </Fragment>\n        )}\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default AllPayments\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  position: relative;\n  margin-bottom: 3rem;\n`\n\nconst ActionsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 60% 30% 10%;\n  padding: 1.5rem;\n  .action-item {\n    &:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n`\n\nconst Card = styled.div`\n  display: flex;\n  align-items: center;\n  text-transform: capitalize;\n  .dot {\n    width: 4px;\n    height: 4px;\n    border-radius: 50%;\n    background-color: #777;\n    margin-right: 2px;\n    &:first-child {\n      margin-left: 10px;\n    }\n    &:last-child {\n      margin-right: 5px;\n    }\n  }\n`\nconst RefundWrapper = styled.div`\n  display: block;\n  align-items: center;\n  .redund-amt {\n    display: block;\n    font-size: 0.7rem;\n    margin-top: 0.3rem;\n  }\n`\nconst PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  button {\n    width: fit-content;\n    padding: 0 1rem;\n    margin: 0 1rem;\n  }\n`\n","import dayjs from 'dayjs'\nimport React, { Fragment } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BackArrow from '../../components/svgs/backArrow'\nimport LinkIcon from '../../components/svgs/link'\nimport { getPaymentsById } from '../../queries/paymentQueries'\nimport { Badge } from '../../styled/badge'\nimport { Button } from '../../styled/button'\nimport { LoadingDots, LoadingWrapper, Spinner } from '../../styled/loader'\n\nconst SinglePayment = () => {\n  const { payment_id } = useParams()\n  const navigate = useNavigate()\n  const { data, isLoading, isError } = getPaymentsById(\n    payment_id ? payment_id : '',\n    !!payment_id\n  )\n  return (\n    <Fragment>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '30vh' }}>\n          <h3>Failed to load subscription!</h3>\n        </div>\n      ) : isLoading ? (\n        <LoadingWrapper>\n          <Spinner type=\"primary\" size=\"2rem\" />\n          <LoadingDots color=\"#f08438\">Loading</LoadingDots>\n        </LoadingWrapper>\n      ) : data ? (\n        <Wrapper>\n          <Button\n            btnType=\"ghost\"\n            size=\"lg\"\n            style={{\n              width: 'fit-content',\n              padding: '0 1rem',\n              marginBottom: '1rem',\n            }}\n            onClick={() => navigate('/payments')}\n            data-test-id=\"go-back\"\n          >\n            <BackArrow size=\"1.4rem\" />\n          </Button>\n          <Fragment>\n            <HeadWrappper>\n              <div className=\"heading\">\n                <div>\n                  <p style={{ margin: 0 }}>PAYMENTS</p>\n\n                  <h2>\n                    ${data.payment_details.amount || 0.0}\n                    {data.payment_details.currency &&\n                      data.payment_details.currency.toUpperCase()}\n                  </h2>\n                </div>\n                <Badge\n                  type={\n                    data.status === 'succeeded'\n                      ? 'success'\n                      : data.status === 'pending'\n                      ? 'primary'\n                      : 'ghost'\n                  }\n                  size={'md'}\n                >\n                  {data.status}\n                </Badge>\n              </div>\n              <div></div>\n            </HeadWrappper>\n            <HorizontalInfo>\n              <div className=\"info-item\">\n                <p className=\"info-item-label\">Created</p>\n\n                <p>\n                  {data.date ? dayjs(data.date).format('DD MMM YYYY') : '-'}\n                </p>\n              </div>\n\n              <div className=\"info-item\">\n                <p className=\"info-item-label\">Customer</p>\n                <p>\n                  {data.email && data.provider_id ? (\n                    <Link\n                      to={`/users/${data.provider_id}/details`}\n                      className=\"ref-link\"\n                    >\n                      {data.email} <LinkIcon />\n                    </Link>\n                  ) : (\n                    '-'\n                  )}\n                </p>\n              </div>\n              <div className=\"info-item\">\n                <p className=\"info-item-label\">Purchased</p>\n                <p>\n                  {data.subscription_refrence_id && data.subscription_name ? (\n                    <Link\n                      to={`/subscriptions/${data.subscription_refrence_id}`}\n                      className=\"ref-link capitalize\"\n                    >\n                      {data.subscription_name} plan <LinkIcon />\n                    </Link>\n                  ) : (\n                    '-'\n                  )}\n                </p>\n              </div>\n            </HorizontalInfo>\n            <h4 className=\"sub-heading-border\">References</h4>\n            <SubDetails>\n              <div className=\"sub-item\">\n                <p>Invoice ID</p>\n                <p className=\"sub-value\">{data.references.invoice_id || '-'}</p>\n\n                <p>Payment Intent ID</p>\n                <p className=\"sub-value\">\n                  {data.references.payment_intent_id || '-'}\n                </p>\n                <p>Charge ID </p>\n                <p className=\"sub-value\">{data.references.charge_id || '-'}</p>\n              </div>\n              <div className=\"sub-item\">\n                <p>User ID</p>\n                <p className=\"sub-value\">{data.user_id || '-'}</p>\n                <p>Customer ID</p>\n                <p className=\"sub-value\">\n                  {data.references.customer_id || '-'}\n                </p>\n                <p>Subscription ID</p>\n                <p className=\"sub-value\">\n                  {data.references.subscription_id || '-'}\n                </p>\n              </div>\n            </SubDetails>\n\n            <h4 className=\"sub-heading-border\">Payment Details</h4>\n            <SubDetails>\n              <div className=\"sub-item\">\n                <p>Plan</p>\n                <p className=\"sub-value\">{data.payment_details.plan_name}</p>\n                <p>Amount</p>\n                <p className=\"sub-value\">${data.payment_details.amount}</p>\n                {data.payment_details.amount_refunded !== 0 && (\n                  <Fragment>\n                    <p>Refunded</p>\n                    <p className=\"sub-value\">\n                      ${data.payment_details.amount_refunded || 0.0}\n                    </p>\n                  </Fragment>\n                )}\n                <p>Stripe Fee</p>\n                <p className=\"sub-value\">${data.payment_details.stripe_fee}</p>\n                <p>Net</p>\n                <b\n                  className={`sub-value ${\n                    data.payment_details.net_amount < 0 && 'negative-sign'\n                  }`}\n                >\n                  {data.payment_details.net_amount > 0\n                    ? `$${data.payment_details.net_amount}`\n                    : `$${Math.abs(data.payment_details.net_amount)}`}\n                </b>\n              </div>\n              <div className=\"sub-item\">\n                <p>Payment Method</p>\n                <p className=\"sub-value\">\n                  {data.payment_method.brand} {data.payment_method.last4}\n                </p>\n                <p>Date</p>\n                <p className=\"sub-value\">\n                  {data.date\n                    ? dayjs(data.date).format('DD MMM YYYY, hh:mm a')\n                    : '-'}\n                </p>\n                <p> Address</p>\n                <p className=\"sub-value\">\n                  {data.payee_address.line1 && `${data.payee_address.line1}, `}\n                  {data.payee_address.line2 && `${data.payee_address.line2}, `}\n                  {data.payee_address.city && `${data.payee_address.city}, `}\n                  {data.payee_address.state && `${data.payee_address.state} `}\n                  {data.payee_address.postal_code &&\n                    `${data.payee_address.postal_code} `}\n                  {data.payee_address.country &&\n                    `${data.payee_address.country}`}\n                </p>\n              </div>\n            </SubDetails>\n          </Fragment>\n        </Wrapper>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default SinglePayment\n\nconst Wrapper = styled.div`\n  padding: 1.5rem;\n  .sub-heading-wrapper {\n    h4 {\n      margin-bottom: 0;\n    }\n    p {\n      margin-bottom: 1rem;\n    }\n  }\n  .sub-heading-border {\n    border-bottom: 1px solid #e7e7e7;\n    padding-bottom: 1rem;\n  }\n`\n\nconst HorizontalInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: 3rem;\n  p {\n    margin: 0;\n    line-height: 1.7;\n  }\n  .info-item-label {\n    margin-bottom: 0.5rem;\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  .info-item {\n    &:not(:last-child) {\n      margin-right: 1.5rem;\n      padding-right: 1.5rem;\n      border-right: 1px solid #e7e7e7;\n    }\n  }\n`\nconst SubDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 50%);\n  max-width: 1000px;\n  margin-bottom: 4rem;\n  .sub-item {\n    display: grid;\n    grid-template-columns: minmax(75px, 170px) auto;\n    height: fit-content;\n    align-items: flex-start;\n    padding-right: 2rem;\n\n    .sub-value {\n      color: #878787;\n    }\n    .negative-sign {\n      position: relative;\n      &::before {\n        content: '- ';\n        position: absolute;\n        left: -10px;\n      }\n    }\n\n    p,\n    b {\n      font-size: 0.875rem;\n      color: inherit;\n      word-wrap: break-word;\n      word-break: break-all;\n      line-height: 2.5;\n      margin: 0;\n    }\n  }\n`\nconst HeadWrappper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  .heading {\n    p {\n      display: block;\n      padding-bottom: 0.7rem;\n      font-weight: bold;\n      color: #878787;\n    }\n    display: flex;\n    align-items: flex-end;\n    padding-top: 1rem;\n\n    h2 {\n      margin-right: 1rem;\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    margin-bottom: 1rem;\n  }\n  button {\n    margin-right: 2rem;\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport AllPayments from './allPayments'\nimport SinglePayment from './singlePayments'\n\nconst Payments = () => {\n  return (\n    <Fragment>\n      <Routes>\n        <Route path=\"/\" element={<AllPayments />} />\n        <Route path=\"/:payment_id\" element={<SinglePayment />} />\n      </Routes>\n    </Fragment>\n  )\n}\n\nexport default Payments\n","import axios from 'axios'\nimport getQueryAdvance from '../hooks/getQueryAdvance'\n\nexport const getUserPayments = (\n  userId: string,\n  page: number,\n  enabled?: boolean\n) => {\n  const fetcher = async (id: string) => {\n    const { data } = await axios.get(`/management/payments/user/${id}`, {\n      params: { page },\n    })\n    return data\n  }\n\n  return getQueryAdvance(\n    ['payments', { userId, page }],\n    () => fetcher(userId),\n    enabled\n  )\n}\nexport interface IGetPaymentQueryParams {\n  q?: string\n  limit?: number\n  start_after?: string\n  next_page?: string\n}\n\nexport const getPayments = (\n  page: number,\n  cacheRef: 'all_list' | 'search_list',\n  params: IGetPaymentQueryParams,\n  enabled?: boolean\n) => {\n  const fetcher = async () => {\n    const { data } = await axios.get(`/management/payments/search`, {\n      params,\n    })\n    return data\n  }\n\n  return getQueryAdvance(\n    ['payments', { q: params.q, cacheRef, page }],\n    () => fetcher(),\n    enabled\n  )\n}\n\nexport const getPaymentsById = (id: string, enabled?: boolean) => {\n  const fetcher = async (id: string) => {\n    const { data } = await axios.get(`/management/payments/${id}`)\n    return data\n  }\n\n  return getQueryAdvance(['payment', id], () => fetcher(id), enabled)\n}\n"],"names":["size","color","className","Fragment","xmlns","viewBox","width","height","fill","d","searchOptions","label","name","useState","page","setPage","searchValue","setSearchValue","searchByValue","setSearchByValue","undefined","query","setQuery","cacheRef","setCacheRef","nextPageId","setNextPageId","startAfter","setStartAfter","navigate","useNavigate","params","limit","q","start_after","next_page","getPayments","data","isLoading","isError","useEffect","handlePage","type","handleSearch","length","feild","createQuery","Empty","style","Loading","title","border","Wrapper","ActionsWrapper","placeholder","value","setValue","handleSubmit","options","btnType","onClick","marginLeft","items","map","item","i","id","plan_name","amount","currency","refunded","RefundWrapper","amount_refunded","status","method","brand","last4","Card","dayjs","date","format","PaginationWrapper","disabled","has_more","styled","payment_id","useParams","getPaymentsById","padding","marginBottom","HeadWrappper","margin","payment_details","toUpperCase","HorizontalInfo","email","provider_id","to","subscription_refrence_id","subscription_name","SubDetails","references","invoice_id","payment_intent_id","charge_id","user_id","customer_id","subscription_id","stripe_fee","net_amount","Math","abs","payment_method","payee_address","line1","line2","city","state","postal_code","country","theme","colors","primary","path","element","getUserPayments","userId","enabled","fetcher","axios","getQueryAdvance"],"sourceRoot":""}